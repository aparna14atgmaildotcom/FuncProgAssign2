The assignment2 in fucntional programming principles in Scala
is about set operations

Here set is defined as fucntion type , which takes element as input and determines whether it belongs there or not. This is trying to encapsulate the "Set" data structure found in Java.

The set of function defined in the assignment consists of 
type Set = Int => Boolean

Contains(S: Set, elem : Int) : Boolean = S(elem)

Next is to define singletonSet. This is
to return function of type Set. This can be envisioned as 
returning anonymous function, which takes element x. It is singleton, 
if the element x is same as argument elem.

def singletonSet(elem : Int) : Set = (element x such that if x == elem , then its singleton set)

Next is union which takes two function arguments of type Set s and t and determines the union of these two sets. This can be envisioned as function which takes integer X and if belongs to set s or set t, then returns true

def union(s: Set, t: set): Set = (element x such that it belongs to set s or belongs to set t)

Intersection is if the element belongs to both the sets

def intersect(s: Set, t: Set): Set = (element x such that (x belongs to set s and belons to set t)

Diff is if elements belongs to first set, but not in second set.

filter is if element belongs to first set and predicate condition holds true.

forall is pretty straight forward. It checks all elements in set satisfies predicate condition

def forall(s: Set, p:Int => Boolean): Boolean = {

def iter(a:Int) : Boolean = {
if(a is greater than upper bound) true
else if (belongs to set s and does not satisfy predicate) return false
else iter(a+1)
iter(lowerbound)
}

exists(s: Set, p:Int=> Boolean) needs to be implemented using forall.
This can be envisioned as for all elements in set s, if negation of predicate holds false, then there exists at least one element for which predicate is true.

map(s: Set, f: Int => Int): Set - requires to return new Set (function), which converst element x in set s to f(x) in new set. This can be thought of as :
for a element y in new set, if there exists in set s, element x such that f(x) == y

